<div class="remote-tray" data-tray="rig_overview_overview">

  <div class='tray-content content-loaded' style="position: relative;">

    <div class="mdv-spinner" id="dv_overview_spinner" style="display: none;">

      <%= render 'jobs/inline_spinner' %>

    </div>

    <div class="dv-sub-container">

      <div class="well-overview" style="overflow-y: scroll;
          overflow-x: hidden;
          height: 100%;
          padding: 10px;
          box-sizing: border-box;
          margin: 0;">
        <div class="well-info">
          <% if job.current_warning.empty? && job.active %>
            <div class="alert-box alert-success" style="margin: -10px -10px 0 -10px;">
              All systems are operating normally
              <%= link_to "View details", "#",
                          "data-id" => job.id,
                          "data-tray-controller" => "jobs",
                          "data-tray" => "warnings_analysis",
                          "data-tray-parent" => "analysis",
                          class: "remote-tray-toggle" %>
            </div>
          <% elsif job.active %>
            <% job.current_warning.each do |warning| %>
              <div class="alert-box alert-warning color-<%= warning.event_warning_type.severity %>" style="margin: -10px -10px 0 -10px;">
                <i class="fa fa-exclamation-triangle"></i> &nbsp;&nbsp;<%= warning.job.well.rig.name %>&nbsp;&nbsp;
                - &nbsp;&nbsp; <%= warning.name %>
                <%= link_to "View details", "#",
                            "data-id" => job.id,
                            "data-tray-controller" => "jobs",
                            "data-tray" => warning.tray_name,
                            "data-tray-parent" => "rig_overview",
                            class: "remote-tray-toggle" %>
              </div>
            <% end %>
          <% end %>
        </div>


        <div class="well-activity clearfix">
          <div class="overview-block" style="margin-top: 30px;">
            <p class="block-title">Entire Well</p>

            <div class="overview-bar">
              <% job.aggregate_activity(-1).each do |activity| %>
                <div class="powertip-overiew" data-percent="<%= activity['percentage'].round(1) %>" data-activity="<%= activity['activity_name'] %>" style="background: <%= activity['color'] %>; width: <%= activity['percentage'] %>%;"></div>
              <% end %>
            </div>
          </div>

          <div class="overview-block">
            <p class="block-title">Last 24 hours</p>

            <div class="overview-bar">
              <% job.aggregate_activity(1).each do |activity| %>
                <div class="powertip-overiew" data-percent="<%= activity['percentage'].round(1) %>" data-activity="<%= activity['activity_name'] %>" style="background: <%= activity['color'] %>; width: <%= activity['percentage'] %>%;"></div>
              <% end %>
            </div>
          </div>

          <div class="overview-block well-status" style="width: 50%;
              padding: 5px;
              box-sizing: border-box;">
            <p class="block-title">Current Activity</p>

            <p class="font-size-16"><%= job.current_gactivity %>
              - <%= job.current_bit_depth.to_f >= 0.0 ? (number_with_delimiter(number_with_precision(convert(job.current_bit_depth, 'ft', company_unit), precision: 0)).to_s + " " + unit('ft', company_unit)) : "" %></p>

            <p class="font-size-16"><%= job.current_activity %></p>
          </div>

          <div class="overview-block well-status" style="width: 50%;
              padding: 5px;
              box-sizing: border-box;">
            <p class="block-title">Hole Depth</p>

            <p class="font-size-22"><%= number_with_delimiter(number_with_precision(convert(job.total_depth, :ft, company_unit), precision: 0)) %>
              <span class="unit"><%= unit(:ft, company_unit) %></span></p>
          </div>
        </div>

        <div class="well-warnings">
          <div id="warnings_bar_block" style="display: block; margin-top: 20px; height: 550px;">
            <div style="width: 100%; text-align: center; color: #ffffff; ">
              <p>Events & Warnings</p>
            </div>

            <div style="position: relative; display: block; margin-top: 20px;">
              <div id="warnings_bar_line" style="position: absolute; right: 40%; border-right: 6px solid #ffffff; height: 500px;"></div>
              <div style="position: absolute; top: 0; right: 30%; margin-top: -7px; color: #ffffff;">0</div>
              <div style="position: absolute; right: 0%; width: 35%; margin-top: -7px; color: #ffffff;">
                <div id="warnings_bar_bottom_axis"></div>
              </div>
              <div id="warnings_bar_current_pos" style="position: absolute;
                  display: none;
                  margin-top: -11px;
                  margin-left: 92px;
                  z-index: 100;">
                <div class="circle" style="cursor: default;"></div>
              </div>
            </div>
            <div id="ov_warnings" class="inline-block drill-view-warnings" style="float: right; position: relative; margin: 0; margin-right: 42%; width: 60%;">
              <div class="group-warning-popup" style="display: none;" data-sid="0"></div>
              <div class="warnings-container"></div>
            </div>

          </div>
        </div>
      </div>

    </div>
  </div>
</div>

<script type="text/javascript">
  (function ($) {

    DV_CURRENT_TAB = DV_TAB_OVERVIEW;
    $('.dv-subtitle').html("Overview");

    $(".remote-tray-toggle[data-tray='rig_overview_overview']").click(function () {
      DV_CURRENT_TAB = DV_TAB_OVERVIEW;
      $('.dv-subtitle').html("Overview");
    });

    var warnings = [];
    <% job.warnings_order_by_depth.each do |warning| %>
    warnings.push({
      id: <%= warning.id %>,
      name: "<%=j warning.name %>",
      severity: "<%= warning.severity %>",
      rig_name: "<%= warning.job.well.rig.name %>",
      duration: "<%= warning.duration %>",
      activity_name: "<%= warning.activity_name %>",
      depth_from: "<%= warning.depth_from.to_f %>",
      depth_to: <%= warning.depth_to.present? ? warning.depth_to.to_f : '' %>,
      resolution: "<%=j warning.resolution %>",
      opened_at: "<%= warning.opened_at.to_time.to_i %>",
      family: '<%= warning.event_warning_type.category %>'
    });
    <% end %>

    var company_unit = "<%= company_unit %>";

    var total_depth = <%= job.total_depth %>;
    var current_depth = <%= job.current_bit_depth == '' || job.status != 6 ? -1 : job.current_bit_depth %>;
    var rig_name = "<%= job.well.rig.name %>";
    var offset = 0;

    var container_height = 500;
    var axis_unit = Math.ceil(total_depth / 8 / 500) * 500;

    function draw_warnings_bar() {
      var prev_pos = -20, prev_top;
      var sID = 0;
      var current_level_warnings = {}, current_level_warnings_count = 0;
      var monthNames = [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ];
      var duration_info = {};
      var margin_tip = 0;

      $('#ov_warnings .warnings-container').html('');

      for (var i = 0; i < warnings.length; i++) {
        var top = warnings[i].depth_from / total_depth * 100;
        var pos = top / 100 * container_height;

        if (pos - prev_pos <= 18 && current_level_warnings[warnings[i].family]) {
          var gID = current_level_warnings[warnings[i].family];
          $('#ov-warning-' + gID).addClass('group-warning');
          subIDs = $('#ov-warning-' + gID + ' .dv-warning').data('sub-ids');
          subIDs = i.toString() + ',' + subIDs;
          $('#ov-warning-' + gID + ' .dv-warning').data('sub-ids', subIDs);
          count = subIDs.split(',').length;
          $('#ov-warning-' + gID + ' .warning-circle').html(count);

          if (duration_info[gID] && duration_info[gID].closed_at < warnings[i].closed_at) {
            duration_info[gID] = {
              depth_from: warnings[i].depth_from,
              depth_to: warnings[i].depth_to,
              severity: warnings[i].severity,
              margin: duration_info[gID].margin
            };
          }
        } else {
          sID++;
          var margin = 0;

          if (pos - prev_pos > 18) {
            current_level_warnings = {};
            current_level_warnings[warnings[i].family] = sID;
            current_level_warnings_count = 1;
            prev_pos = pos;
            prev_top = top;
            margin_tip = 0;
          } else if (!current_level_warnings[warnings[i].family]) {
            if (current_level_warnings_count == 1) {
              for (var key in current_level_warnings) {
                $('#ov-warning-' + current_level_warnings[key] + ' .warning-label').remove();
              }
            }
            current_level_warnings[warnings[i].family] = sID;
            current_level_warnings_count++;
            margin = 15;
          }

          margin += 18 * (current_level_warnings_count - 1) + margin_tip;

          for (var key in duration_info) {
            var t = duration_info[key].depth_to / total_depth * 100;
            if (t > prev_top && duration_info[key].margin == margin) {
              if (margin == 0) {
                margin_tip += 18;
                margin += 33;
              } else {
                margin_tip += 18;
                margin += 18;
              }
            }
          }

          duration_info[sID] = {
            depth_from: warnings[i].depth_from,
            depth_to: warnings[i].depth_to,
            severity: warnings[i].severity,
            margin: margin
          };

          $('#ov_warnings .warnings-container').append('<div id="ov-warning-' + sID + '" class="warning-container warning-tooltip" style="top: ' + prev_top + '%; cursor: pointer; right: ' + margin + 'px;" ' +
              'data-severity="' + warnings[i].severity + '" ' +
              'data-name="' + warnings[i].name + '" ' +
              'data-rig_name="' + rig_name + '"  ' +
              'data-duration="' + warnings[i].duration + '" ' +
              'data-activity_name="' + warnings[i].activity_name + '" ' +
              'data-depth_from="' + warnings[i].depth_from + '" ' +
              'data-depth_to="' + warnings[i].depth_to + '" ' +
              'data-resolution="' + warnings[i].resolution + '" ' +
              'data-opened_at="' + warnings[i].opened_at + '">' +
              ( current_level_warnings_count == 1 && margin == 0 ? '<div class="dash-line"></div>' : '' ) +
              '<div style="cursor: pointer;" class="dv-warning warning-detail-btn" data-id="' + warnings[i].id + '" data-sub-ids="' + i + '">' +
              '<div class="warning-circle  color-' + warnings[i].severity + '""></div>' +
              ( current_level_warnings_count > 1 ? '' : '<div class="warning-label">' + (warnings[i].name).replace(/Moderate|High|Low/gi, '') + '</div>' ) +
              '</div>' +
              '</div>');

        }
      }

      // draw duration bars
      for (var key in duration_info) {
        var top = duration_info[key].depth_from / total_depth * 100;
        var height = (duration_info[key].depth_to - duration_info[key].depth_from) / total_depth * 100;
        $('#ov_warnings .warnings-container').prepend('<div class="duration-bar opac-color-' + duration_info[key].severity + ' " style="position: absolute;width: 3px; top: ' + top + '%; height: ' + height + '%; right: ' + ((duration_info[key].margin || 15) + 6) + 'px;"></div>');
      }

      $('#ov_warnings .dv-warning').off();

      // popup box for group warnings
      $('#ov_warnings .warning-tooltip.group-warning .warning-circle').hover(function () {
        $('#ov_warnings .group-warning-popup').data('sid', parseInt($('#ov_warnings .group-warning-popup').data('sid')) + 1);
        var that = $(this).closest('.warning-container');
        if ($('#ov_warnings .group-warning-popup').data('id') != that.find('.dv-warning').data('id')) {
          $('#ov_warnings .group-warning-popup .dropback').off();
          $('#ov_warnings .group-warning-popup').data('id', that.find('.dv-warning').data('id'));
          var ids = that.find('.dv-warning').data('sub-ids').split(',');

          var severity = that.attr('data-severity');
          var name = that.attr('data-name');
          var rig_name = that.attr('data-rig_name');
          var resolution = that.attr('data-resolution');

          var content = '<div class="box-header color-' + severity + '">' +
              rig_name + ' - ' + name +
              '</div>' +
              '<div class="box-body">' +
              '<div class="res-text">' + resolution + '</div>' +
              '<table class="warning-table">';

          for (var i = ids.length - 1; i >= 0; i--) {
            var id = ids[i];
            var severity = warnings[id].severity;
            var depth_from = warnings[id].depth_from;
            var depth_to = warnings[id].depth_to;
            var opened_at = new Date(parseInt(warnings[id].opened_at) * 1000);
            var opened_at_str = monthNames[opened_at.getMonth()] + " " + opened_at.getDate().add_zero() + " " + opened_at.getHours().add_zero() + ":" + opened_at.getMinutes().add_zero() + ":" + opened_at.getSeconds().add_zero();
            var duration = warnings[id].duration;
            var warning_id = warnings[id].id;
            content += '<tr class="warning-item warning-detail-btn" data-id="' + warning_id + '">' +
                '<td><div class="warning-circle color-' + severity + '"></div></td>' +
                '<td class="text1">' + parseFloat(depth_from).convert('ft', company_unit).value.round_to_decimal().with_delimiter() + ( depth_to ? ' - ' + parseFloat(depth_to).convert('ft', company_unit).value.round_to_decimal().with_delimiter() : '' ) + ' ' + 'ft'.unit(company_unit) + '</td>' +
                '<td class="text2">' + opened_at_str + '</td>' +
                '<td>' + ( duration != '' ? '<div class="text3">' + duration + '</div>' : '' ) + '</td>' +
                '</tr>';
          }

          content += '</table>' +
              '</div><div class="dropback" style="position: fixed; margin-top: 55px; width: 100%; height: 100vh; z-index: 1031; left: 0; top: 0; right: 0; bottom: 0; background-color: #000000; opacity: 0;"></div>';

          $('#ov_warnings .group-warning-popup').html(content);
          $('#ov_warnings .group-warning-popup').fadeIn(100);
//          $('#ov_warnings .group-warning-popup .warning-item').click(onWarningClick);

          $('#ov_warnings .group-warning-popup .box-header').hover(function () {
            $(this).parent().data('sid', parseInt($(this).parent().data('sid')) + 1);
            $('#ov_warnings .group-warning-popup').stop(true, true);
            $('#ov_warnings .group-warning-popup').show();
          });
          $('#ov_warnings .group-warning-popup .box-body').hover(function () {
            $(this).parent().data('sid', parseInt($(this).parent().data('sid')) + 1);
            $('#ov_warnings .group-warning-popup').stop(true, true);
            $('#ov_warnings .group-warning-popup').show();
          });

          $('#ov_warnings .group-warning-popup .dropback').on('hover', function () {
            var sId = $('#ov_warnings .group-warning-popup').data('sid');
            if (parseInt($('#ov_warnings .group-warning-popup').data('sid')) == parseInt(sId)) {
              $('#ov_warnings .group-warning-popup').fadeOut(100);
            }
          });

          var height = $('#ov_warnings .group-warning-popup').height();
          var top = parseFloat(that.css('top').substring(0, that.css('top').length - 2));
          if (top + height - 50 >= container_height) {
            $('#ov_warnings .group-warning-popup').css('top', container_height - height);
          } else {
            $('#ov_warnings .group-warning-popup').css('top', top - 50);
          }
          var right = parseFloat(that.css('right').substring(0, that.css('right').length - 2));
          $('#ov_warnings .group-warning-popup').css('right', -350 + (right == 0 ? 15 : right) - 3);

          // scrollbar
          $('#ov_warnings .group-warning-popup .box-body').perfectScrollbar();
        } else {
          $('#ov_warnings .group-warning-popup').show();
        }
      });

      // tooltip for single warning
      $('#ov_warnings .warning-tooltip:not(.group-warning)').powerTip({
        followMouse: false,
        fadeInTime: 50,
        fadeOutTime: 100,
        placement: 'e'
      });
      $('#ov_warnings .warning-tooltip:not(.group-warning)').on({
        powerTipPreRender: function () {
          var severity = $(this).attr('data-severity');
          var name = $(this).attr('data-name');
          var rig_name = $(this).attr('data-rig_name');
          var duration = $(this).attr('data-duration');
          var activity_name = $(this).attr('data-activity_name');
          var depth_from = $(this).attr('data-depth_from');
          var depth_to = $(this).attr('data-depth_to');
          var resolution = $(this).attr('data-resolution');
          var opened_at = new Date(parseInt($(this).attr('data-opened_at')) * 1000);
          var opened_at_str = monthNames[opened_at.getMonth()] + " " + opened_at.getDate().add_zero() + " " + opened_at.getHours().add_zero() + ":" + opened_at.getMinutes().add_zero() + ":" + opened_at.getSeconds().add_zero();
          $(this).data('powertip', '<div class="warning-box">' +
              '<div class="box-header color-' + severity + '">' +
              rig_name + ' - ' + name +
              (duration != '' ? '<span class="hour">' + duration + '</span>' : '') +
              '</div>' +
              '<div class="box-body">' +
              '<p style="color: #ffffff;">' + parseFloat(depth_from).convert('ft', company_unit).value.round_to_decimal().with_delimiter() + ( depth_to != '' ? ' - ' + parseFloat(depth_to).convert('ft', company_unit).val().round_to_decimal().with_delimiter() : '' ) + ' ' + 'ft'.unit(company_unit) + '</p>' +
              '<p>' + resolution + '</p>' +
              '<div class="divider"></div>' +
              '<p>' + opened_at_str + '</p>' +
              '</div>' +
              '</div>');
        }
      });
    }

    $('#ov_warnings').css({ "height": container_height });
    $('#warnings_bar_block').css({ "height": container_height + offset + 50 + 30 });
    $('#warnings_bar_line').css({ "height": container_height + offset });
    $('#warnings_bar_container').css({ "height": container_height + offset + 30 });
    $('#warnings_bar_bottom_axis').parent().css({ "top": container_height });
    $('#warnings_bar_bottom_axis').html(total_depth.convert('ft', company_unit).value.round_to_decimal().with_delimiter());

    draw_warnings_bar();

  }(jQuery));
</script>